name: GitHub Pages Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set GitHub Token
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          echo "GH_TOKEN=${{ github.token }}" >> $GITHUB_ENV

      - name: Extract and convert Mermaid diagrams
        run: |
          mkdir -p Doc/images/mermaid

          find Doc -name "*.adoc" -type f | while read file; do
            echo "Processing $file: $(basename "$file")"

            # Process the file line by line to find mermaid blocks
            line_num=0
            in_mermaid_block=false
            mermaid_start=0
            delimiter_line=0
            content=""

            while IFS= read -r line; do
              line_num=$((line_num + 1))

              if [[ "$line" == *"[mermaid]"* ]] && [[ "$in_mermaid_block" == "false" ]]; then
                in_mermaid_block=true
                mermaid_start=$line_num
                echo "Found [mermaid] tag at line $line_num"
                continue
              fi

              if [[ "$in_mermaid_block" == "true" ]] && [[ "$delimiter_line" == "0" ]] && [[ "$line" == "...."* ]]; then
                delimiter_line=$line_num
                echo "Found starting delimiter at line $line_num"
                continue
              fi

              if [[ "$in_mermaid_block" == "true" ]] && [[ "$delimiter_line" != "0" ]] && [[ "$line" == "...."* ]]; then
                echo "Found ending delimiter at line $line_num"

                # Process the Mermaid diagram
                diagram_basename="mermaid_$(basename "$file" .adoc)_${mermaid_start}"
                echo "$content" > "${diagram_basename}.mmd"

                docker run --rm -v $(pwd):/data minlag/mermaid-cli:latest -i /data/${diagram_basename}.mmd -o /data/Doc/images/mermaid/${diagram_basename}.png -t dark -b transparent

                if [ -f "Doc/images/mermaid/${diagram_basename}.png" ]; then
                  echo "Successfully created PNG"

                  # Get the title from the line before [mermaid] if it exists
                  title=""
                  if [ "$mermaid_start" -gt 1 ]; then
                    prev_line=$(sed -n "$((mermaid_start-1))p" "$file")
                    if [[ "$prev_line" == "."* ]]; then
                      title=" \"$prev_line\""
                    fi
                  fi

                  # Create temporary file for editing
                  temp_file="${file}.temp"
                  awk -v start="$mermaid_start" -v end="$line_num" -v img="image::images/mermaid/${diagram_basename}.png[]$title" '
                    NR == start {print img; next}
                    NR > start && NR <= end {next}
                    {print}
                  ' "$file" > "$temp_file"

                  mv "$temp_file" "$file"
                  echo "Updated file with image reference"
                else
                  echo "ERROR: PNG file was not created"
                fi

                rm -f "${diagram_basename}.mmd"

                # Reset for next block
                in_mermaid_block=false
                mermaid_start=0
                delimiter_line=0
                content=""
                continue
              fi

              if [[ "$in_mermaid_block" == "true" ]] && [[ "$delimiter_line" != "0" ]]; then
                content="${content}${line}"$'\n'
              fi

            done < "$file"
          done

          # List generated images and confirm they exist
          echo "Generated images:"
          find Doc/images/mermaid -type f -name "*.png" | while read img; do
            file_size=$(stat -c%s "$img")
            echo "$img ($(($file_size / 1024)) KB)"
          done

      - name: Debug AsciiDoc files
        run: |
          echo "Checking modified AsciiDoc files:"
          grep -r "image::images/mermaid" Doc/

      - name: asciidoctor-ghpages
        uses: manoelcampos/asciidoctor-ghpages-action@v2.3.0
        with:
          pdf_build: true
          source_dir: Doc/
